{"version":3,"sources":["ThemeContext.js","api.js","constants.js","localStorage.js","reducers.js","helpers.js","components/Header.js","components/Navigation/NavItem.js","components/Navigation/Navigation.js","propTypes.js","components/RaceList/Race.js","components/LoadingIndicator.js","components/RaceList/RaceList.js","components/RaceDetails/RaceResults.js","components/RaceDetails/RaceDetails.js","components/Standings/DriverStandings.js","components/Standings/ConstructorStandings.js","components/SeasonSelect.js","components/Standings/Standings.js","components/Footer.js","serviceWorker.js","index.js","App.jsx"],"names":["ThemeContext","React","createContext","ThemeProvider","Provider","urlBase","fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","fetchRaces","_ref2","_callee2","season","data","_context2","concat","MRData","RaceTable","Races","length","Error","_x2","fetchRaceResults","_ref3","_callee3","round","_context3","Results","_x3","_x4","fetchDriverStandings","_ref4","_callee4","_context4","StandingsTable","StandingsLists","DriverStandings","_x5","fetchConstructorStandings","_ref5","_callee5","_context5","ConstructorStandings","_x6","FIRST_SEASON","CURRENT_SEASON","Date","getFullYear","TEAMS","id","name","getIsSavedCalendar","calendar","localStorage","getItem","error","removeCalendar","removeItem","saveRaces","races","setItem","JSON","stringify","loadRaces","serializedRaces","parse","saveTheme","theme","loadTheme","i","l","calendarInitialState","isLoading","calendarReducer","state","action","type","objectSpread","defineProperty","payload","resultsInitialState","results","resultsReducer","newResults","deepmerge","driversInitialState","standings","driversReducer","constructorsInitialState","constructorsReducer","getDate","date","time","Header","setTheme","useContext","react_default","createElement","className","value","onChange","e","target","aria-label","map","team","key","NavItem","setRoute","route","active","children","onClick","Navigation","PropTypes","shape","Location","country","string","isRequired","lat","locality","long","circuitId","circuitName","constructorId","nationality","code","dateOfBirth","driverId","familyName","givenName","permanentNumber","AverageSpeed","speed","units","Time","lap","rank","millis","Race","upcomingRace","selectRace","raceClasses","Number","dateTime","onKeyPress","title","tabIndex","toLocaleDateString","toLocaleTimeString","index_es","icon","faChevronRight","LoadingIndicator","Fragment","faSpinner","spin","RaceList","isSavedCalendarInit","onSaveRaces","seasonSelect","_useState","useState","_useState2","slicedToArray","isSavedCalendar","setIsSavedCalendar","useEffect","onSaveCalendar","faSave","toast","success","faTrashAlt","message","race","Race_Race","Circuit","RaceResults","res","Driver","position","grid","Constructor","laps","status","points","FastestLap","RaceDetails","raceCount","isLoadingResults","resultsError","getRaceResults","faChevronLeft","href","rel","raceName","faExternalLinkAlt","disabled","RaceResults_RaceResults","s","constructors","Constructors","wins","SeasonSelect","onChangeSeason","seasonOptions","push","Standings","drivers","setSeason","getDriverStandings","getConstructorStandings","driverStandingsSeason","constructorStandingsSeason","SeasonSelect_SeasonSelect","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","_useState3","_useState4","_useState5","_useState6","calendarSeason","setCalendarSeason","_useReducer","useReducer","_useReducer2","calendarState","calendarDispatch","_useState7","_useState8","setIsSavedCalendarInit","getRaces","_races","onLine","t0","_useState9","_useState10","selectedRaceRound","setSelectedRaceRound","_useReducer3","_useReducer4","resultsState","resultsDispatch","_useState11","_useState12","standingsSeason","setStandingsSeason","_useReducer5","_useReducer6","driversState","driversDispatch","_useReducer7","_useReducer8","constructorsState","constructorsDispatch","_getRaceResults","useCallback","raceRound","seasonRaces","selectedRace","findIndex","r","getSelectedRace","Header_Header","Navigation_Navigation","react_toastify","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","currentSeason","d","getUpcomingRace","RaceDetails_RaceDetails","getResults","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.571759c3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ThemeContext = React.createContext('');\r\nexport const ThemeProvider = ThemeContext.Provider;\r\n","const urlBase = 'https://ergast.com/api/f1';\r\n\r\nconst fetchData = async (url) => {\r\n  const response = await fetch(url);\r\n  return await response.json();\r\n}\r\n\r\nexport const fetchRaces = async (season) => {\r\n  const data = await fetchData(`${urlBase}/${season}.json`);\r\n  if (data.MRData.RaceTable.Races.length === 0) {\r\n    throw new Error('No data available');\r\n  }\r\n  return data.MRData.RaceTable.Races;\r\n}\r\n\r\nexport const fetchRaceResults = async (season, round) => {\r\n  const data = await fetchData(`${urlBase}/${season}/${round}/results.json`);\r\n  if (data.MRData.RaceTable.Races.length === 0) {\r\n    throw new Error('No data available');\r\n  }\r\n  return data.MRData.RaceTable.Races[0].Results;\r\n}\r\n\r\nexport const fetchDriverStandings = async (season) => {\r\n  const data = await fetchData(`${urlBase}/${season}/driverStandings.json`);\r\n  if (data.MRData.StandingsTable.StandingsLists.length === 0) {\r\n    throw new Error('No data available');\r\n  }\r\n  return data.MRData.StandingsTable.StandingsLists[0].DriverStandings;\r\n}\r\n\r\nexport const fetchConstructorStandings = async (season) => {\r\n  const data = await fetchData(`${urlBase}/${season}/constructorStandings.json`);\r\n  if (data.MRData.StandingsTable.StandingsLists.length === 0) {\r\n    throw new Error('No data available');\r\n  }\r\n  return data.MRData.StandingsTable.StandingsLists[0].ConstructorStandings;\r\n}\r\n","export const FIRST_SEASON = 1950;\r\nexport const CURRENT_SEASON = new Date().getFullYear();\r\n\r\nexport const TEAMS = [\r\n  { id: 'ferrari', name: 'Ferrari' },\r\n  { id: 'mercedes', name: 'Mercedes' },\r\n  { id: 'redbull', name: 'Red Bull' },\r\n  { id: 'renault', name: 'Renault' },\r\n  { id: 'haas', name: 'Haas' },\r\n  { id: 'racingpoint', name: 'Racing Point' },\r\n  { id: 'tororosso', name: 'Toro Rosso' },\r\n  { id: 'mclaren', name: 'McLaren' },\r\n  { id: 'alfaromeo', name: 'Alfa Romeo' },\r\n  { id: 'williams', name: 'Williams' }\r\n];\r\n\r\nexport const NOTIFICATION_OPTIONS = {\r\n  '10': '10 Minutes',\r\n  '30': '30 Minutes',\r\n  '60': '1 Hour',\r\n  '120': '2 Hours',\r\n  '1440': '1 Day'\r\n}\r\n","import { TEAMS } from './constants';\r\n\r\nexport const getIsSavedCalendar = (calendar) => {\r\n  try {\r\n    if (localStorage.getItem(calendar) !== null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const removeCalendar = (calendar) => {\r\n  try {\r\n    localStorage.removeItem(calendar);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const saveRaces = (races, season) => {\r\n  try {\r\n    localStorage.setItem('calendar_' + season, JSON.stringify(races));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const loadRaces = (season) => {\r\n  try {\r\n    const serializedRaces = localStorage.getItem('calendar_' + season);\r\n    if (serializedRaces === null) return undefined;\r\n    return JSON.parse(serializedRaces);\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const saveTheme = (theme) => {\r\n  try {\r\n    localStorage.setItem('theme', theme);\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const loadTheme = () => {\r\n  try {\r\n    const theme = localStorage.getItem('theme');\r\n    for (let i = 0, l = TEAMS.length; i < l; i++) {\r\n      if (TEAMS[i].id === theme) {\r\n        return theme;\r\n      }\r\n    }\r\n    return 'ferrari';\r\n  } catch (error) {\r\n    return 'ferrari';\r\n  }\r\n}\r\n","import deepmerge from 'deepmerge';\r\n\r\nexport const calendarInitialState = {\r\n  races: {},\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const calendarReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        races: {\r\n          ...state.races,\r\n          ...{ [action.payload.season]: action.payload.races }\r\n        }\r\n      };\r\n    case 'FETCH_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const resultsInitialState = {\r\n  results: {},\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const resultsReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      const newResults = {\r\n        [action.payload.season]: {\r\n          [action.payload.round]: action.payload.results\r\n        }\r\n      };\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        results: deepmerge(state.results, newResults)\r\n      };\r\n    case 'FETCH_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const driversInitialState = {\r\n  standings: {},\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const driversReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        standings: {\r\n          ...state.standings,\r\n          ...{ [action.payload.season]: action.payload.standings }\r\n        }\r\n      };\r\n    case 'FETCH_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const constructorsInitialState = {\r\n  standings: {},\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const constructorsReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        standings: {\r\n          ...state.standings,\r\n          ...{ [action.payload.season]: action.payload.standings }\r\n        }\r\n      };\r\n    case 'FETCH_ERROR':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const getDate = (date, time) => {\r\n  return time ? new Date(date + 'T' + time) : new Date(date);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.css';\r\nimport { ThemeContext } from '../ThemeContext';\r\nimport { TEAMS } from '../constants';\r\n\r\nexport default function Header({ setTheme }) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <header className={'bg-' + theme}>\r\n      <div className=\"flex\">\r\n        <h1 className={'dib ' + theme}>F1 Races</h1>\r\n        <div className=\"select-wrapper\">\r\n          <select\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            className={'b-' + theme}\r\n            aria-label=\"Select theme\"\r\n          >\r\n            {TEAMS.map(team => (\r\n              <option\r\n                key={team.id}\r\n                value={team.id}\r\n                className={'bg-' + team.id}\r\n              >\r\n                {team.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  setTheme: PropTypes.func.isRequired\r\n};\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nexport default function NavItem({ setRoute, route, active, children }) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      onClick={() => setRoute(route)}\r\n      className={`${active ? ('active bg-' + theme) : ''} h-${theme}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nNavItem.propTypes = {\r\n  route: PropTypes.string.isRequired,\r\n  setRoute: PropTypes.func.isRequired,\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Navigation.css';\r\nimport NavItem from './NavItem';\r\n\r\nexport default function Navigation({ setRoute, route }) {\r\n  return (\r\n    <nav>\r\n      <NavItem\r\n        setRoute={setRoute}\r\n        route=\"RaceList\"\r\n        active={route === 'RaceList'}\r\n      >\r\n        Calendar\r\n      </NavItem>\r\n      <NavItem\r\n        setRoute={setRoute}\r\n        route=\"Standings\"\r\n        active={route === 'Standings'}\r\n      >\r\n        Standings\r\n      </NavItem>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavigation.propTypes = {\r\n  route: PropTypes.string.isRequired,\r\n  setRoute: PropTypes.func.isRequired\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const racePropType = {\r\n  Circuit: PropTypes.shape({\r\n    Location: PropTypes.shape({\r\n      country: PropTypes.string.isRequired,\r\n      lat: PropTypes.string,\r\n      locality: PropTypes.string.isRequired,\r\n      long: PropTypes.string\r\n    }).isRequired,\r\n    circuitId: PropTypes.string,\r\n    circuitName: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  raceName: PropTypes.string.isRequired,\r\n  round: PropTypes.string.isRequired,\r\n  season: PropTypes.string.isRequired,\r\n  time: PropTypes.string,\r\n  url: PropTypes.string.isRequired\r\n};\r\n\r\nexport const resultPropType = {\r\n  Constructor: PropTypes.shape({\r\n    constructorId: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    nationality: PropTypes.string,\r\n    url: PropTypes.string\r\n  }).isRequired,\r\n  Driver: PropTypes.shape({\r\n    code: PropTypes.string,\r\n    dateOfBirth: PropTypes.string,\r\n    driverId: PropTypes.string.isRequired,\r\n    familyName: PropTypes.string.isRequired,\r\n    givenName: PropTypes.string.isRequired,\r\n    nationality: PropTypes.string,\r\n    permanentNumber: PropTypes.string,\r\n    url: PropTypes.string\r\n  }).isRequired,\r\n  FastestLap: PropTypes.shape({\r\n    AverageSpeed: PropTypes.shape({\r\n      speed: PropTypes.string,\r\n      units: PropTypes.string\r\n    }),\r\n    Time: PropTypes.shape({\r\n      time: PropTypes.string\r\n    }),\r\n    lap: PropTypes.string,\r\n    rank: PropTypes.string\r\n  }),\r\n  Time: PropTypes.shape({\r\n    millis: PropTypes.string,\r\n    time: PropTypes.string\r\n  }),\r\n  grid: PropTypes.string.isRequired,\r\n  laps: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  points: PropTypes.string.isRequired,\r\n  position: PropTypes.string.isRequired,\r\n  positionText: PropTypes.string,\r\n  status: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Race.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { getDate } from '../../helpers';\r\n\r\nexport default function Race({\r\n  round, country, locality, date, time, upcomingRace, selectRace\r\n}) {\r\n  let raceClasses = 'race unselectable';\r\n  raceClasses += Number(round) % 2 === 1 ? ' striped' : '';\r\n  raceClasses += upcomingRace ? ' upcoming' : '';\r\n  const dateTime = getDate(date, time);\r\n\r\n  return (\r\n    <div\r\n      className={raceClasses}\r\n      onClick={() => selectRace(round)}\r\n      onKeyPress={(e) => { if (e.key === 'Enter') selectRace(round) }}\r\n      title=\"Show details\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"round\">{round}.</span>\r\n      <span className=\"location\">{country}, {locality}</span>\r\n      <span className=\"date-time\">\r\n        <span className=\"date\">{dateTime.toLocaleDateString()}</span>\r\n        <span className=\"time\">\r\n          {time && dateTime.toLocaleTimeString()}\r\n        </span>\r\n      </span>\r\n      <span className=\"arrow\">\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nRace.propTypes = {\r\n  round: PropTypes.string.isRequired,\r\n  country: PropTypes.string.isRequired,\r\n  locality: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  time: PropTypes.string,\r\n  upcomingRace: PropTypes.bool.isRequired,\r\n  selectRace: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function LoadingIndicator() {\r\n  return <><FontAwesomeIcon icon={faSpinner} spin={true} /> Loading...</>;\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { racePropType } from '../../propTypes';\r\nimport Race from './Race';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { getIsSavedCalendar, removeCalendar } from '../../localStorage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function RaceList({\r\n  races, season, upcomingRace, isLoading, error, isSavedCalendarInit,\r\n  selectRace, onSaveRaces, seasonSelect\r\n}) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const [isSavedCalendar, setIsSavedCalendar] = useState(false);\r\n  useEffect(() => {\r\n    setIsSavedCalendar(getIsSavedCalendar('calendar_' + season));\r\n  }, [season, isSavedCalendarInit]);\r\n\r\n  function onSaveCalendar(races, season) {\r\n    const success = onSaveRaces(races, season);\r\n    if (success) setIsSavedCalendar(true);\r\n  }\r\n\r\n  function onRemoveCalendar(calendar) {\r\n    const error = removeCalendar(calendar);\r\n    if (error) {\r\n      toast.error('Error - calendar was not deleted :(');\r\n    } else {\r\n      setIsSavedCalendar(false);\r\n      toast.success('Calendar was removed from browser storage');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {seasonSelect}\r\n      {races && !isSavedCalendar && (\r\n        <button\r\n          onClick={() => onSaveCalendar(races, season)}\r\n          className={`button ml3 mb3 bg-${theme} b-${theme}`}\r\n        >\r\n          <FontAwesomeIcon icon={faSave} /> Save calendar\r\n        </button>\r\n      )}\r\n      {isSavedCalendar && (\r\n        <button\r\n         onClick={() => onRemoveCalendar('calendar_' + season)}\r\n         className={`button ml3 mb3 bg-${theme} b-${theme}`}\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} /> Remove calendar\r\n        </button>\r\n      )}\r\n      {isLoading && <div className=\"p3\"><LoadingIndicator /></div>}\r\n      {error && <p className=\"p3\">{error.message}</p>}\r\n      {races && (\r\n        races.map(race => (\r\n          <Race\r\n            key={race.round}\r\n            round={race.round}\r\n            country={race.Circuit.Location.country}\r\n            locality={race.Circuit.Location.locality}\r\n            date={race.date}\r\n            time={race.time}\r\n            upcomingRace={Number(race.round) === Number(upcomingRace)}\r\n            selectRace={selectRace}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nRaceList.propTypes = {\r\n  races: PropTypes.arrayOf(PropTypes.shape(racePropType)),\r\n  season: PropTypes.number.isRequired,\r\n  upcomingRace: PropTypes.string.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  error: PropTypes.object,\r\n  isSavedCalendarInit: PropTypes.bool.isRequired,\r\n  selectRace: PropTypes.func.isRequired,\r\n  onSaveRaces: PropTypes.func.isRequired,\r\n  seasonSelect: PropTypes.element.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { resultPropType } from '../../propTypes';\r\nimport './RaceResults.css';\r\n\r\nexport default function RaceResults({ results }) {\r\n  return (\r\n    <div className=\"results responsive-table\">\r\n      <h2 className=\"pl3 pr3\">Results</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"tr\" title=\"Finish Position\">Pos.</th>\r\n            <th className=\"tr\" title=\"Grid Position\">Grid</th>\r\n            <th>Driver</th>\r\n            <th>Constructor</th>\r\n            <th>Time</th>\r\n            <th className=\"tr\">Laps</th>\r\n            <th>Status</th>\r\n            <th className=\"tr\" title=\"Points\">Pts</th>\r\n            <th>Fastest Lap</th>\r\n            <th title=\"Average Speed\">Avg Speed</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {results.map(res => (\r\n            <tr key={res.Driver.driverId + res.position}>\r\n              <td className=\"tr\">{res.position}.</td>\r\n              <td className=\"tr\">\r\n                {res.grid === '0' ? 'Pit Lane' : (res.grid + '.')}\r\n              </td>\r\n              <td>{res.Driver.givenName} {res.Driver.familyName}</td>\r\n              <td>{res.Constructor.name}</td>\r\n              <td>{res.Time ? res.Time.time : 'N/A'}</td>\r\n              <td className=\"tr\">{res.laps}</td>\r\n              <td>{res.status}</td>\r\n              <td className=\"tr\">{res.points}</td>\r\n              <td\r\n                className={res.FastestLap && res.FastestLap.rank === '1' ? 'fastest' : ''}\r\n              >\r\n                {res.FastestLap ? res.FastestLap.Time.time: 'N/A'}\r\n              </td>\r\n              <td>\r\n                {res.FastestLap\r\n                  ? `${res.FastestLap.AverageSpeed.speed} ${res.FastestLap.AverageSpeed.units}`\r\n                  : 'N/A'\r\n                }\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nRaceResults.propTypes = {\r\n  results: PropTypes.arrayOf(\r\n    PropTypes.shape(resultPropType).isRequired\r\n  ).isRequired\r\n};\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { racePropType, resultPropType } from '../../propTypes';\r\nimport './RaceDetails.css';\r\nimport RaceResults from './RaceResults';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport { getDate } from '../../helpers';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faExternalLinkAlt, faChevronLeft, faChevronRight\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function RaceDetails({\r\n  race, raceCount, results, isLoadingResults, resultsError, selectRace,\r\n  getRaceResults\r\n}) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const dateTime = getDate(race.date, race.time);\r\n  const round = Number(race.round);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container responsive-padding\">\r\n        <div className=\"prev-next mb3\">\r\n          {round !== 1 && (\r\n            <button\r\n              className={`button button-left mr3 bg-${theme} b-${theme}`}\r\n              onClick={() => selectRace(round - 1)}\r\n            >\r\n              <FontAwesomeIcon icon={faChevronLeft} /> Previous Race\r\n            </button>\r\n          )}\r\n          {round !== raceCount && (\r\n            <button\r\n              className={`button button-right bg-${theme} b-${theme}`}\r\n              onClick={() => selectRace(round + 1)}\r\n            >\r\n              Next Race <FontAwesomeIcon icon={faChevronRight} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <h2>Race Details</h2>\r\n        <p>Race: <a href={race.url} className=\"break-word\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {race.raceName} <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n        </a></p>\r\n        <p>Season: {race.season}</p>\r\n        <p>Round: {round}</p>\r\n        <p>\r\n          Location: {race.Circuit.Location.country}, {race.Circuit.Location.locality}\r\n        </p>\r\n        <p>Circuit: <a href={race.Circuit.url} className=\"break-word\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {race.Circuit.circuitName} <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n        </a></p>\r\n        <p>\r\n          Date and time: {dateTime.toLocaleDateString()} {race.time && dateTime.toLocaleTimeString()}\r\n        </p>\r\n        {!results && (\r\n          <button\r\n            onClick={() => getRaceResults(race.season, round)}\r\n            className={`button bg-${theme} b-${theme}`}\r\n            disabled={isLoadingResults}\r\n          >\r\n            {isLoadingResults ? <LoadingIndicator /> : <>Load Results</>}\r\n          </button>\r\n        )}\r\n        {resultsError && <p>{resultsError.message}</p>}\r\n      </div>\r\n      {results && <RaceResults results={results} />}\r\n    </>\r\n  );\r\n}\r\n\r\nRaceDetails.propTypes = {\r\n  race: PropTypes.shape(racePropType).isRequired,\r\n  raceCount: PropTypes.number.isRequired,\r\n  results: PropTypes.arrayOf(PropTypes.shape(resultPropType)),\r\n  isLoadingResults: PropTypes.bool.isRequired,\r\n  resultsError: PropTypes.object,\r\n  selectRace: PropTypes.func.isRequired,\r\n  getRaceResults: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\n\r\nexport default function DriverStandings({ standings, isLoading, error }) {\r\n  return (\r\n    <>\r\n      <h2 className=\"responsive-padding\">Driver Standings</h2>\r\n      {isLoading && <div className=\"p3\"><LoadingIndicator /></div>}\r\n      {error && <p className=\"p3\">{error.message}</p>}\r\n      {standings && (\r\n        <div className=\"responsive-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"tr\" title=\"Position\">Pos.</th>\r\n                <th>Driver</th>\r\n                <th>Constructor</th>\r\n                <th className=\"tr\">Points</th>\r\n                <th className=\"tr\">Wins</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {standings.map(s => {\r\n                let constructors = '';\r\n                for (let i = 0, l = s.Constructors.length; i < l; i++) {\r\n                  constructors += s.Constructors[i].name;\r\n                  if (i + 1 !== l) {\r\n                    constructors += ', ';\r\n                  }\r\n                }\r\n                return (\r\n                  <tr key={s.Driver.driverId}>\r\n                    <td className=\"tr\">{s.position}.</td>\r\n                    <td>{s.Driver.givenName} {s.Driver.familyName}</td>\r\n                    <td>{constructors}</td>\r\n                    <td className=\"tr\">{s.points}</td>\r\n                    <td className=\"tr\">{s.wins}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nDriverStandings.propTypes = {\r\n  standings: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      Constructors: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          constructorId: PropTypes.string,\r\n          name: PropTypes.string.isRequired,\r\n          nationality: PropTypes.string,\r\n          url: PropTypes.string\r\n        }).isRequired\r\n      ).isRequired,\r\n      Driver: PropTypes.shape({\r\n        code: PropTypes.string,\r\n        dateOfBirth: PropTypes.string,\r\n        driverId: PropTypes.string.isRequired,\r\n        familyName: PropTypes.string.isRequired,\r\n        givenName: PropTypes.string.isRequired,\r\n        nationality: PropTypes.string,\r\n        permanentNumber: PropTypes.string,\r\n        url: PropTypes.string\r\n      }).isRequired,\r\n      points: PropTypes.string.isRequired,\r\n      position: PropTypes.string.isRequired,\r\n      positionText: PropTypes.string,\r\n      wins: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ),\r\n  isLoading: PropTypes.bool.isRequired,\r\n  error: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\n\r\nexport default function ConstructorStandings({ standings, isLoading, error }) {\r\n  return (\r\n    <>\r\n      <h2 className=\"responsive-padding\">Constructor Standings</h2>\r\n      {isLoading && <div className=\"p3\"><LoadingIndicator /></div>}\r\n      {error && <p className=\"p3\">{error.message}</p>}\r\n      {standings && (\r\n        <div className=\"responsive-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"tr\" title=\"Position\">Pos.</th>\r\n                <th>Constructor</th>\r\n                <th className=\"tr\">Points</th>\r\n                <th className=\"tr\">Wins</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {standings.map(s => (\r\n                <tr key={s.Constructor.name}>\r\n                  <td className=\"tr\">{s.position}.</td>\r\n                  <td>{s.Constructor.name}</td>\r\n                  <td className=\"tr\">{s.points}</td>\r\n                  <td className=\"tr\">{s.wins}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nConstructorStandings.propTypes = {\r\n  standings: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      Constructor: PropTypes.shape({\r\n        constructorId: PropTypes.string,\r\n        name: PropTypes.string.isRequired,\r\n        nationality: PropTypes.string,\r\n        url: PropTypes.string\r\n      }).isRequired,\r\n      points: PropTypes.string.isRequired,\r\n      position: PropTypes.string.isRequired,\r\n      positionText: PropTypes.string,\r\n      wins: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ),\r\n  isLoading: PropTypes.bool.isRequired,\r\n  error: PropTypes.object\r\n};\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SeasonSelect.css';\r\nimport { FIRST_SEASON, CURRENT_SEASON } from '../constants';\r\nimport { ThemeContext } from '../ThemeContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function SeasonSelect({ season, onChangeSeason }) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  let seasonOptions = [];\r\n  for (let i = FIRST_SEASON; i <= CURRENT_SEASON; i++) {\r\n    seasonOptions.push(<option key={i} value={i}>Season {i}</option>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"season mb3\">\r\n      {season !== FIRST_SEASON && (\r\n        <button\r\n          onClick={() => onChangeSeason(season - 1)}\r\n          title=\"Previous season\"\r\n          className={`button bg-${theme} b-${theme}`}\r\n        >\r\n          <FontAwesomeIcon icon={faChevronLeft} />\r\n        </button>\r\n      )}\r\n      <select\r\n        value={season}\r\n        onChange={(e) => onChangeSeason(Number(e.target.value))}\r\n        className={'b-' + theme}\r\n        aria-label=\"Select season\"\r\n      >\r\n        {seasonOptions}\r\n      </select>\r\n      {season !== CURRENT_SEASON && (\r\n        <button\r\n          onClick={() => onChangeSeason(season + 1)}\r\n          title=\"Next season\"\r\n          className={`button bg-${theme} b-${theme}`}\r\n        >\r\n          <FontAwesomeIcon icon={faChevronRight} />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSeasonSelect.propTypes = {\r\n  season: PropTypes.number.isRequired,\r\n  onChangeSeason: PropTypes.func.isRequired\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DriverStandings from './DriverStandings';\r\nimport ConstructorStandings from './ConstructorStandings';\r\nimport SeasonSelect from '../SeasonSelect';\r\n\r\nexport default function Standings({\r\n  season, drivers, constructors,\r\n  setSeason, getDriverStandings, getConstructorStandings\r\n}) {\r\n  const driverStandingsSeason = drivers.standings[season];\r\n  const constructorStandingsSeason = constructors.standings[season];\r\n\r\n  useEffect(() => {\r\n    if (!driverStandingsSeason) getDriverStandings();\r\n  }, [driverStandingsSeason, getDriverStandings]);\r\n\r\n  useEffect(() => {\r\n    if (!constructorStandingsSeason) getConstructorStandings();\r\n  }, [constructorStandingsSeason, getConstructorStandings]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <SeasonSelect\r\n        season={season}\r\n        onChangeSeason={(season) => setSeason(season)}\r\n      />\r\n      <DriverStandings\r\n        standings={drivers.standings[season]}\r\n        isLoading={drivers.isLoading}\r\n        error={drivers.error}\r\n      />\r\n      <ConstructorStandings\r\n        standings={constructors.standings[season]}\r\n        isLoading={constructors.isLoading}\r\n        error={constructors.error}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nStandings.propTypes = {\r\n  season: PropTypes.number.isRequired,\r\n  drivers: PropTypes.shape({\r\n    standings: PropTypes.object,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    error: PropTypes.object\r\n  }).isRequired,\r\n  constructors: PropTypes.shape({\r\n    standings: PropTypes.object,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    error: PropTypes.object\r\n  }).isRequired,\r\n  setSeason: PropTypes.func.isRequired,\r\n  getDriverStandings: PropTypes.func.isRequired,\r\n  getConstructorStandings: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"mt3\">\r\n      <hr />\r\n      <div className=\"p3 tc\">\r\n        Icons made by <a href=\"https://www.freepik.com/\" title=\"Freepik\">\r\n        Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n        www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\"\r\n        title=\"Creative Commons BY 3.0\" target=\"_blank\"\r\n        rel=\"noopener noreferrer\">CC 3.0 BY</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.register();\r\n","import React, { useState, useEffect, useReducer, useCallback } from 'react';\r\nimport { ThemeProvider } from './ThemeContext';\r\nimport {\r\n  fetchRaces, fetchRaceResults, fetchDriverStandings, fetchConstructorStandings\r\n} from './api';\r\nimport { saveTheme, loadTheme, loadRaces, saveRaces } from './localStorage';\r\nimport {\r\n  calendarInitialState, calendarReducer,\r\n  resultsInitialState, resultsReducer,\r\n  driversInitialState, driversReducer,\r\n  constructorsReducer, constructorsInitialState\r\n} from './reducers';\r\nimport { getDate } from './helpers';\r\nimport Header from './components/Header';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport RaceList from './components/RaceList/RaceList';\r\nimport RaceDetails from './components/RaceDetails/RaceDetails';\r\nimport Standings from './components/Standings/Standings';\r\nimport SeasonSelect from './components/SeasonSelect';\r\nimport Footer from './components/Footer';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { CURRENT_SEASON } from './constants';\r\n\r\nexport default function App() {\r\n  const [theme, setTheme] = useState('');\r\n  useEffect(() => {\r\n    setTheme(loadTheme());\r\n  }, []);\r\n\r\n  const [route, setRoute] = useState('RaceList');\r\n\r\n  const [calendarSeason, setCalendarSeason] = useState(CURRENT_SEASON);\r\n  const [calendarState, calendarDispatch] = useReducer(calendarReducer, calendarInitialState);\r\n  const [isSavedCalendarInit, setIsSavedCalendarInit] = useState(false);\r\n  useEffect(() => {\r\n    const getRaces = async () => {\r\n      const races = loadRaces(calendarSeason);\r\n      if (races) {\r\n        calendarDispatch({\r\n          type: 'FETCH_SUCCESS',\r\n          payload: { season: calendarSeason, races }\r\n        });\r\n      } else {\r\n        if (!navigator.onLine) {\r\n          toast.error('You are offline :(');\r\n          calendarDispatch({\r\n            type: 'FETCH_ERROR',\r\n            payload: new Error('No data available')\r\n          });\r\n          return;\r\n        }\r\n\r\n        calendarDispatch({ type: 'FETCH_INIT' });\r\n        try {\r\n          const races = await fetchRaces(calendarSeason);\r\n          calendarDispatch({\r\n            type: 'FETCH_SUCCESS',\r\n            payload: { season: calendarSeason, races }\r\n          });\r\n\r\n          if (calendarSeason === CURRENT_SEASON) {\r\n            const error = saveRaces(races, calendarSeason);\r\n            if (!error) setIsSavedCalendarInit(true);\r\n          }\r\n        } catch (error) {\r\n          calendarDispatch({ type: 'FETCH_ERROR', payload: error });\r\n        }\r\n      }\r\n    };\r\n\r\n    if (!calendarState.races[calendarSeason]) getRaces();\r\n  }, [calendarSeason, calendarState.races]);\r\n\r\n  const [selectedRaceRound, setSelectedRaceRound] = useState(0);\r\n\r\n  const [resultsState, resultsDispatch] = useReducer(resultsReducer, resultsInitialState);\r\n\r\n  const [standingsSeason, setStandingsSeason] = useState(CURRENT_SEASON);\r\n  const [driversState, driversDispatch] = useReducer(driversReducer, driversInitialState);\r\n  const [constructorsState, constructorsDispatch] = useReducer(constructorsReducer, constructorsInitialState);\r\n\r\n  async function getRaceResults(season, round) {\r\n    if (!navigator.onLine) {\r\n      toast.error('You are offline :(');\r\n      return;\r\n    }\r\n\r\n    resultsDispatch({ type: 'FETCH_INIT' });\r\n    try {\r\n      const results = await fetchRaceResults(season, round);\r\n      resultsDispatch({\r\n        type: 'FETCH_SUCCESS',\r\n        payload: { season, round, results }\r\n      });\r\n    } catch(error) {\r\n      resultsDispatch({ type: 'FETCH_ERROR', payload: error });\r\n    }\r\n  }\r\n\r\n  const getDriverStandings = useCallback(() => {\r\n    if (!navigator.onLine) {\r\n      toast.error('You are offline :(');\r\n      return;\r\n    }\r\n\r\n    driversDispatch({ type: 'FETCH_INIT' });\r\n    fetchDriverStandings(standingsSeason)\r\n      .then(standings => {\r\n        driversDispatch({\r\n          type: 'FETCH_SUCCESS',\r\n          payload: { season: standingsSeason, standings }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        driversDispatch({ type: 'FETCH_ERROR', payload: error });\r\n      });\r\n  }, [standingsSeason]);\r\n\r\n  const getConstructorStandings = useCallback(() => {\r\n    if (!navigator.onLine) {\r\n      toast.error('You are offline :(');\r\n      return;\r\n    }\r\n\r\n    constructorsDispatch({ type: 'FETCH_INIT' });\r\n    fetchConstructorStandings(standingsSeason)\r\n      .then(standings => {\r\n        constructorsDispatch({\r\n          type: 'FETCH_SUCCESS',\r\n          payload: { season: standingsSeason, standings }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        constructorsDispatch({ type: 'FETCH_ERROR', payload: error });\r\n      });\r\n  }, [standingsSeason]);\r\n\r\n  function setAndSaveTheme(theme) {\r\n    setTheme(theme);\r\n    saveTheme(theme);\r\n  }\r\n\r\n  function getUpcomingRace(races, season, currentSeason) {\r\n    if (races && season === currentSeason) {\r\n      for (let i = 0, l = races.length, d = new Date(); i < l; i++) {\r\n        if (d < getDate(races[i].date, races[i].time)) {\r\n          return races[i].round;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function selectRace(raceRound) {\r\n    setRoute('RaceDetails');\r\n    setSelectedRaceRound(Number(raceRound));\r\n    resultsDispatch({ type: 'CLEAR_ERROR' });\r\n  }\r\n\r\n  function onChangeCalendarSeason(season) {\r\n    setCalendarSeason(season);\r\n    calendarDispatch({ type: 'CLEAR_ERROR' });\r\n  }\r\n\r\n  function onSaveRaces() {\r\n    const error = saveRaces(calendarState.races[calendarSeason], calendarSeason);\r\n    if (error) {\r\n      toast.error('Error - calendar was not saved :(');\r\n      return false;\r\n    } else {\r\n      toast.success('Calendar saved to browser storage');\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function getSelectedRace(selectedRaceRound, races) {\r\n    if (selectedRaceRound > 0 && races) {\r\n      const i = races.findIndex(r => Number(r.round) === selectedRaceRound);\r\n      return races[i];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function getResults(selectedRace, results) {\r\n    if (selectedRace && results) {\r\n      return results[selectedRace.round];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const seasonRaces = calendarState.races[calendarSeason];\r\n  const selectedRace = getSelectedRace(selectedRaceRound, calendarState.races[calendarSeason]);\r\n\r\n  return (\r\n    <ThemeProvider value={theme}>\r\n      <Header setTheme={setAndSaveTheme} />\r\n      <Navigation route={route} setRoute={setRoute} />\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={5000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick={false}\r\n        rtl={false}\r\n        pauseOnVisibilityChange\r\n        draggable={false}\r\n        pauseOnHover\r\n      />\r\n      {route === 'RaceList' && (\r\n        <RaceList\r\n          races={seasonRaces}\r\n          season={calendarSeason}\r\n          isSavedCalendarInit={isSavedCalendarInit}\r\n          upcomingRace={getUpcomingRace(seasonRaces, calendarSeason, CURRENT_SEASON)}\r\n          isLoading={calendarState.isLoading}\r\n          error={calendarState.error}\r\n          selectRace={selectRace}\r\n          onSaveRaces={onSaveRaces}\r\n          seasonSelect={\r\n            <SeasonSelect\r\n              season={calendarSeason}\r\n              onChangeSeason={onChangeCalendarSeason}\r\n            />\r\n          }\r\n        />\r\n      )}\r\n      {route === 'RaceDetails' && (\r\n        <RaceDetails\r\n          race={selectedRace}\r\n          raceCount={seasonRaces.length}\r\n          results={getResults(selectedRace, resultsState.results[selectedRace.season])}\r\n          isLoadingResults={resultsState.isLoading}\r\n          resultsError={resultsState.error}\r\n          selectRace={selectRace}\r\n          getRaceResults={getRaceResults}\r\n        />\r\n      )}\r\n      {route === 'Standings' && (\r\n        <Standings\r\n          season={standingsSeason}\r\n          setSeason={setStandingsSeason}\r\n          drivers={driversState}\r\n          getDriverStandings={getDriverStandings}\r\n          constructors={constructorsState}\r\n          getConstructorStandings={getConstructorStandings}\r\n        />\r\n      )}\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}